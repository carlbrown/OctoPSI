#!/usr/bin/env ruby -wU

require 'rubygems'
require 'webrick'
require 'xmlrpc/server'
require 'optparse'
require 'pp'

require File.join(File.dirname(__FILE__), '..', 'lib/OctoPSI')

require File.join(File.dirname(__FILE__), 'server_hacks','WEBrickServlet_service')

options = {}

optparse = OptionParser.new do|opts|
  # Set a banner, displayed at the top
  # of the help screen.
  opts.banner = "Usage: #$0 [options] blog_parent_dir"

  # Define the options, and what they do
  options[:port] = 4004
  opts.on( '-p', '--port PORT', Integer, 'Server port (default 4004)' ) do |port|
    options[:port] = port
  end

  opts.on( '-h', '--help', 'Print Command Line Options' ) do
    puts opts
    exit 1
  end

end

optparse.parse!

if ARGV.count != 1
  puts "Usage: #$0 [options] blog_parent_dir"
  exit 1
end


rootdir=ARGV[0]

if rootdir.nil? or not File.directory? rootdir
  puts ""#{rootdir} must be a folder""
  exit 1
end

puts "Starting up with folder #{rootdir} on port #{options[:port]}"

opsi = OctoPSI::OctoPSI.new(rootdir)
server = XMLRPC::WEBrickServlet.new
server.add_handler("blogger", opsi)
server.add_handler("metaWeblog", opsi)
server.add_handler("mt", opsi)
server.add_introspection
server.add_multicall


httpserver = WEBrick::HTTPServer.new(
    :Port => options[:port],
    :BindAddress => '127.0.0.1',
    :DocumentRoot => opsi.blogs.values[0].public_dir
)

httpserver.mount("/xmlrpc.php", server)

['INT', 'TERM', 'HUP'].each { |signal|
  trap(signal) { httpserver.shutdown }
}

httpserver.start